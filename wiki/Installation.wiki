#summary Installation instructions
#labels Phase-Deploy

= 1. Installation =

1) Untar package contents

	{{{tar -xzvf mollify_VER.tar.gz}}}

	This will extract two directories:
	  * "mollify": Application host page and backend service files
	  * "org.sjarvela.mollify.App": Client application files

2) Copy extracted directories into your web server root directory

3) Modify "configuration.php" under directory "mollify", for further instructions see chapter 2.

4) You are ready to go. Open address http://your.host.name/mollify to see your files.

----

= 2. Configuration =

Backend file "configuration.php" contains all configuration properties needed by Mollify. Currently configurable
aspects are users and published directories.


2.1 USERS
---------

Mollify supports different user accounts, which can have different published directories. User configuration is
optional, and when users are not defined, no authentication is requested.

A) For no authentication, use following format:

$USERS = array();

B) To configure user accounts, use following format:

$USERS = array(
	[USER_ID] => array("name" => [USER NAME], "password" => [PASSWORD]),
	...
);

For example:

$USERS = array(
	"1" => array("name" => "User 1", "password" => "foo"),
	"2" => array("name" => "User 2", "password" => "bar")
);

This configuration has two users, "User 1" and "User 2".

Rules for user configuration:
- User id's [USER_ID] can be freely chosen, but they must be unique
- User names [USER NAME] must be unique


2.2 PUBLISHED DIRECTORIES
-------------------------

Mollify supports freely selectable published directories. Directories need not to have any relation with each other.
Also, if user accounts are configured, each user can have different set of directories available.

A) When no user accounts are defined (see chapter 2.1, Users), use following format:

$PUBLISHED_DIRECTORIES = array(
	array(
		[DIR_ID] => array("name" => [DIR_NAME], "path" => [DIR_PATH]),
		...
	)
);

See rules below.

B) When user accounts are defined (see chapter 2.1, Users), use following format:

$PUBLISHED_DIRECTORIES = array(
	[USER_ID] => array(
		[DIR_ID] => array("name" => [DIR_NAME], "path" => [DIR_PATH]),
		...
	),
	...
);

For example:

$PUBLISHED_DIRECTORIES = array(
	"1" => array(
		"r1" => array("name" => "Folder A", "path" => "/foo/bar"),
		"r2" => array("name" => "Folder B", "path" => "/foo/bay")
	),
	"2" => array(
		"r1" => array("name" => "Folder A", "path" => "/foo/bat"),
		"r2" => array("name" => "Folder C", "path" => "/foo/baz")
	)
);

With this configuration
- User with id "1" (defined in user configuration) has two visible directories: "Folder A" and "Folder B"
- User with id "2" (defined in user configuration) has two visible directories: "Folder A" and "Folder C"
- Although "Folder A" exists in both users, they may point to different physical folder

Rules are:
- User id [USER_ID] must exist in user configuration (see chapter 2.1)
- Directory id's [DIR_ID] can be freely chosen, but they must be unique within user (two users can have same id's)
- Path [DIR_PATH] must be absolute path in local file system
- Actual file system folder name is not shown to user, but instead the name [DIR_NAME] defined in the configuration

NOTE! Currently all files and directories are recursively exposed, so carefully select your configuration.

= 3. Modifying Installation =

== Moving host page ==

	Host page can be located anywhere, the only thing that matters is that backend interface files (.php) are located in the same directory.

== Moving client application files ==

	Client application files can be located anywhere, only the javascript reference in the host page
	must be updated. While the location and the name of the folder "org.sjarvela.mollify.App" can be
	changed, do not alter its contents.

== Customizing Mollify host page, or integrating Mollify into existing web page ==

	Host page structure can be freely modified, as long as following rules are met:
	  * Javascript file "org.sjarvela.mollify.App.nocache.js" must be linked
	  * In the page, there must be a div with id "mollify". Application is injected inside this element.
	
	Optionally
	  * If you wish to choose the language, include meta information in the head section
	  * If you wish to support browser history, keep the iframe element with id "__gwt_historyFrame"